apiVersion: v1
kind: Pod
metadata:
  annotations:
    prometheus.io/port: "9113"
    prometheus.io/scheme: http
    prometheus.io/scrape: "true"
  creationTimestamp: "2022-01-05T08:20:33Z"
  generateName: nginx-ingress-54448476bd-
  labels:
    app: nginx-ingress
    pod-template-hash: 54448476bd
  name: nginx-ingress-54448476bd-nzn9p
  namespace: nginx-ingress
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: nginx-ingress-54448476bd
    uid: 34a17e9c-f3f2-4cfc-853f-9684cc8a34df
  resourceVersion: "966"
  uid: 32dfa335-fa76-4a85-afc3-b3b4ad3db7cd
spec:
  containers:
  - args:
    - -nginx-plus
    - -nginx-configmaps=$(POD_NAMESPACE)/nginx-config
    - -default-server-tls-secret=$(POD_NAMESPACE)/default-server-secret
    - -enable-app-protect
    - -report-ingress-status
    - -enable-prometheus-metrics
    - -nginx-status-allow-cidrs=0.0.0.0/0
    - -nginx-status-port=30880
    env:
    - name: POD_NAMESPACE
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.namespace
    - name: POD_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    image: danisch/nginx-ingress-nap:2.0.2
    imagePullPolicy: Always
    name: nginx-plus-ingress
    ports:
    - containerPort: 80
      hostPort: 80
      name: http
      protocol: TCP
    - containerPort: 443
      hostPort: 443
      name: https
      protocol: TCP
    - containerPort: 8081
      name: readiness-port
      protocol: TCP
    - containerPort: 9113
      name: prometheus
      protocol: TCP
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: /nginx-ready
        port: readiness-port
        scheme: HTTP
      periodSeconds: 1
      successThreshold: 1
      timeoutSeconds: 1
    resources: {}
    securityContext:
      allowPrivilegeEscalation: true
      capabilities:
        add:
        - NET_BIND_SERVICE
        drop:
        - ALL
      runAsUser: 101
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-t9pbw
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: minikube
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: nginx-ingress
  serviceAccountName: nginx-ingress
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: kube-api-access-t9pbw
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2022-01-05T08:20:33Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2022-01-05T08:20:51Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2022-01-05T08:20:51Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2022-01-05T08:20:33Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: docker://7d742fe867d2c4ea990342ea0df221eee33f1bbb1543d991bae4b1bd83934fc1
    image: danisch/nginx-ingress-nap:2.0.2
    imageID: docker-pullable://danisch/nginx-ingress-nap@sha256:3c77e79ec98550397fb99dfa86a2f34c6cd1230cd3c97dcdb1192fbec265a781
    lastState: {}
    name: nginx-plus-ingress
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2022-01-05T08:20:50Z"
  hostIP: 192.168.64.10
  phase: Running
  podIP: 172.17.0.3
  podIPs:
  - ip: 172.17.0.3
  qosClass: BestEffort
  startTime: "2022-01-05T08:20:33Z"
